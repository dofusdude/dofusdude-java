/**
 * dofusdude
 * # A project for you - the developer. The all-in-one toolbelt for your next Ankama related project.  ## Client SDKs - [Javascript](https://github.com/dofusdude/dofusdude-js) npm i dofusdude-js --save - [Typescript](https://github.com/dofusdude/dofusdude-ts) npm i dofusdude-ts --save - [Go](https://github.com/dofusdude/dodugo) go get -u github.com/dofusdude/dodugo - [Python](https://github.com/dofusdude/dofusdude-py) pip install dofusdude - [PHP](https://github.com/dofusdude/dofusdude-php)  Everything, including this site, is generated out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the Single Source of Truth. If there is a problem with the SDKs, create an issue there.  Your favorite language is missing? Please let me know!  # Main Features - ü•∑ **Seamless Auto-Update** load data in the background when a new Dofus version is released and serving it within 2 minutes with atomic data source switching. No downtime and no effects for the user, just always up-to-date.  - ‚ö° **Blazingly Fast** all data in-memory, aggressive caching over short time spans, HTTP/2 multiplexing, written in Go, optimized for low latency, hosted on bare metal in üá©üá™.  - üì® **Discord Integration** Ankama related RSS and Almanax feeds to post to Discord servers with advanced features like filters or mentions. Use the endpoints as a dev or the official [Web Client](https://discord.dofusdude.com) as a user.  - ü©∏ **Dofus 2 Beta** from stable to bleeding edge by replacing /dofus2 with /dofus2beta.  - üó£Ô∏è **Multilingual** supporting _en_, _fr_, _es_, _pt_ including the dropped languages from the Dofus website _de_ and _it_.  - üß† **Search by Relevance** allowing typos in name and description, handled by language specific text analysis and indexing.  - üïµÔ∏è **Complete** actual data from the game including items invisible to the encyclopedia like quest items.  - üñºÔ∏è **HD Images** rendering game assets to high-res images with up to 800x800 px.  ... and much more on the Roadmap on my Discord.   ## Deploy now. Use forever. Everything you see here on this site, you can use now and forever. Updates could introduce new fields, new paths or parameter but never break backwards compatibility.  There is one exception! **The API will _always_ choose being up-to-date over everything else**. So if Ankama decides to drop languages from the game like they did with their website, the API will loose support for them, too.  ## Thank you! I highly welcome everyone on my [Discord](https://discord.gg/3EtHskZD8h) to just talk about projects and use cases or give feedback of any kind.  The servers have a fixed monthly cost to provide very fast responses. If you want to help me keeping them running or simply donate to that cause, consider becoming a [GitHub Sponsor](https://github.com/sponsors/dofusdude).
 *
 * The version of the OpenAPI document: 0.8.3
 * Contact: stelzo@steado.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.dofusdude.client.model;

import com.dofusdude.client.model.SetEffectsEntryType;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;


public class EffectsEntry  {
  
 /**
   * minimum int value, can be a single if ignore_int_max and no ignore_int_min
  **/
  @JsonbProperty("int_minimum")
  private Integer intMinimum;

 /**
   * maximum int value, if not ignore_int_max and not ignore_int_min, the effect has a range value
  **/
  @JsonbProperty("int_maximum")
  private Integer intMaximum;

  @JsonbProperty("type")
  private SetEffectsEntryType type;

 /**
   * ignore the int min field because the actual value is a string. For readability the templated field is the only important field in this case. 
  **/
  @JsonbProperty("ignore_int_min")
  private Boolean ignoreIntMin;

 /**
   * ignore the int max field, if ignore_int_min is true, int min is a single value
  **/
  @JsonbProperty("ignore_int_max")
  private Boolean ignoreIntMax;

 /**
   * all fields from above encoded in a single string
  **/
  @JsonbProperty("formatted")
  private String formatted;

 /**
   * minimum int value, can be a single if ignore_int_max and no ignore_int_min
   * @return intMinimum
  **/
  public Integer getIntMinimum() {
    return intMinimum;
  }

  /**
    * Set intMinimum
  **/
  public void setIntMinimum(Integer intMinimum) {
    this.intMinimum = intMinimum;
  }

  public EffectsEntry intMinimum(Integer intMinimum) {
    this.intMinimum = intMinimum;
    return this;
  }

 /**
   * maximum int value, if not ignore_int_max and not ignore_int_min, the effect has a range value
   * @return intMaximum
  **/
  public Integer getIntMaximum() {
    return intMaximum;
  }

  /**
    * Set intMaximum
  **/
  public void setIntMaximum(Integer intMaximum) {
    this.intMaximum = intMaximum;
  }

  public EffectsEntry intMaximum(Integer intMaximum) {
    this.intMaximum = intMaximum;
    return this;
  }

 /**
   * Get type
   * @return type
  **/
  public SetEffectsEntryType getType() {
    return type;
  }

  /**
    * Set type
  **/
  public void setType(SetEffectsEntryType type) {
    this.type = type;
  }

  public EffectsEntry type(SetEffectsEntryType type) {
    this.type = type;
    return this;
  }

 /**
   * ignore the int min field because the actual value is a string. For readability the templated field is the only important field in this case. 
   * @return ignoreIntMin
  **/
  public Boolean getIgnoreIntMin() {
    return ignoreIntMin;
  }

  /**
    * Set ignoreIntMin
  **/
  public void setIgnoreIntMin(Boolean ignoreIntMin) {
    this.ignoreIntMin = ignoreIntMin;
  }

  public EffectsEntry ignoreIntMin(Boolean ignoreIntMin) {
    this.ignoreIntMin = ignoreIntMin;
    return this;
  }

 /**
   * ignore the int max field, if ignore_int_min is true, int min is a single value
   * @return ignoreIntMax
  **/
  public Boolean getIgnoreIntMax() {
    return ignoreIntMax;
  }

  /**
    * Set ignoreIntMax
  **/
  public void setIgnoreIntMax(Boolean ignoreIntMax) {
    this.ignoreIntMax = ignoreIntMax;
  }

  public EffectsEntry ignoreIntMax(Boolean ignoreIntMax) {
    this.ignoreIntMax = ignoreIntMax;
    return this;
  }

 /**
   * all fields from above encoded in a single string
   * @return formatted
  **/
  public String getFormatted() {
    return formatted;
  }

  /**
    * Set formatted
  **/
  public void setFormatted(String formatted) {
    this.formatted = formatted;
  }

  public EffectsEntry formatted(String formatted) {
    this.formatted = formatted;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EffectsEntry {\n");
    
    sb.append("    intMinimum: ").append(toIndentedString(intMinimum)).append("\n");
    sb.append("    intMaximum: ").append(toIndentedString(intMaximum)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ignoreIntMin: ").append(toIndentedString(ignoreIntMin)).append("\n");
    sb.append("    ignoreIntMax: ").append(toIndentedString(ignoreIntMax)).append("\n");
    sb.append("    formatted: ").append(toIndentedString(formatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
